//! ludorum 0.1.0
!function(a){if("function"==typeof define&&define.amd)define(["basis"],a);else if("object"==typeof module&&module.exports)module.exports=a(require("basis"));else{var b=(0,eval)("this");b.ludorum=a(b.basis)}}(function(a){"use strict";var b=a.declare,c=a.obj,d=a.copy,e=a.raiseIf,f=a.Iterable,g=a.iterable,h=a.Future,i=a.Randomness,j=a.initialize,k=a.Statistics,l=a.Events,m={},n=m.games={},o=m.players={},q=m.tournaments={},r=m.aleatories={},s=m.boards={},t=(m.utils={},m.Game=b({constructor:function(a){this.activePlayers=a?Array.isArray(a)?a:[a]:[this.players[0]]},name:"",players:[],moves:function(){for(var a={},b=0;b<this.activePlayers.length;b++)a[this.activePlayers[b]]=[];return a},next:function(){throw new Error((this.constructor.name||"Game")+".next() not implemented! Please override.")},result:function(){return this.moves()?null:this.defeat()},isActive:function(){for(var a=0;a<arguments.length;a++)if(this.activePlayers.indexOf(arguments[a])<0)return!1;return!0},activePlayer:function(){var a=this.activePlayers.length;return e(1>a,"There is no active player."),e(a>1,"More than one player is active."),this.activePlayers[0]},opponents:function(a){return a=a||this.activePlayers,g(this.players).filter(function(b){return a.indexOf(b)<0}).toArray()},opponent:function(a){var b=this.players.indexOf(a||this.activePlayer());return this.players[(b+1)%this.players.length]},doMove:function(a,b){b=b||this.activePlayer();var c={};return c[b]=a,this.next(c)},resultBounds:function(){return[-1,1]},zerosumResult:function(a,b){b=b?Array.isArray(b)?b:[b]:this.activePlayers,a=+a/(b.length||1);for(var c,d={},e=-a/(this.players.length-b.length||1),f=0;f<this.players.length;f++)c=this.players[f],d[c]=b.indexOf(c)<0?e:a;return d},victory:function(a,b){return this.zerosumResult(b||1,a)},defeat:function(a,b){return this.zerosumResult(b||-1,a)},draw:function(a,b){b=+(b||0),a=a||this.players;var c={};for(var d in a)c[a[d]]=b;return c},args:function(){throw new Error("Game.args() not implemented! Please override.")},clone:function(){var a=this.args();return a[0]=this.constructor,new(a[0].bind.apply(a[0],a))},identifier:function(){return JSON.stringify(this.args())},toString:function(){var a=this.args();return a.shift()+"("+a.map(JSON.stringify).join(",")+")"}}));t.serialized=function(){var a=this.prototype.moves,c=this.prototype.next;return b(this,{moves:function e(){for(var b,c=this.__fixedMoves__||(this.__fixedMoves__={}),d=a.call(this),e={},f=0;f<this.activePlayers.length;f++)if(c.hasOwnProperty(this.activePlayers[f])){b=this.activePlayers[f];break}return b&&d?(e[b]=d[b],e):null},next:function(a){var b,e=d({},this.fixedMoves||{},a),f=g(this.players).all(function(a){return e.hasOwnProperty(a)});return f?(b=c.call(this,e),b.fixedMoves={}):(b=this.clone(),b.fixedMoves=e),b}})},t.cached=function(){{var a=this.prototype.moves,c=this.prototype.result;this.prototype.next}return b(this,{moves:function(){var b=a.call(this);return this.moves=function(){return b},b},result:function d(){var d=c.call(this);return this.result=function(){return d},d}})};var u=m.Player=b({constructor:function(){var a=0;return function(b){this.name=""+(b||"Player"+a++)}}(),__moves__:function(a,b){var c=a.moves();return e(!c||!c[b]||c[b].length<1,"Player ",b," has no moves for game ",a,"."),c[b]},decision:function(a,b){return this.__moves__(a,b)[0]},participate:function(){return this},commandQuit:function(a){return{command:"quit",role:a}},commandReset:function(a,b){return{command:"reset",role:a,ply:isNaN(b)?0:+b}}}),v=m.Match=b({constructor:function(a,b){this.game=a,this.players=Array.isArray(b)?g(a.players).zip(b).toObject():b,this.history=[a],this.events=new l({events:["begin","move","next","end"]});for(var c in this.players)this.players[c]=this.players[c].participate(this,c)||this.players[c]},ply:function(){return this.history.length-1},toString:function(){return"Match("+this.game+", "+JSON.stringify(this.players)+")"},state:function(a){return a=isNaN(a)?this.ply():0>+a?this.ply()+ +a:+a,this.history[0|a]},result:function(){return this.state().result()},decisions:function(a){a=a||this.state();var b=this.players;return h.all(a.activePlayers.map(function(c){return h.when(b[c].decision(a,c))}))},__advance__:function(a,b){return this.history.push(b),this.onNext(a,b),b},run:function(a){if(a=isNaN(a)?1/0:+a,1>a)return h.when(this);var b,c=this.ply(),d=this.state();for(0>c&&this.onBegin(d);d instanceof x;)d=this.__advance__(d,d.instantiate());if(b=d.result())return this.onEnd(d,b),h.when(this);var e=this;return this.decisions(d).then(function(b){return b=g(d.activePlayers).zip(b).toObject(),e.onMove(d,b),e.__advance__(d,d.next(b)),e.run(a-1)})},onBegin:function(a){this.events.emit("begin",this.players,a,this),this.logger&&this.logger.info("Match begins with ",g(this.players).map(function(a){return a[1]+" as "+a[0]}).join(", "),"; for ",a,".")},onMove:function(a,b){this.events.emit("move",b,a,this),this.logger&&this.logger.info("Players move: ",JSON.stringify(b)," in ",a)},onNext:function(a,b){this.events.emit("next",a,b,this),this.logger&&this.logger.info("Match advances from ",a," to ",b)},onEnd:function(a,b){this.events.emit("end",a,b,this),this.logger&&this.logger.info("Match for ",a,"ends with ",JSON.stringify(b))}}),w=m.Tournament=b({constructor:function(a,b){this.game=a,this.players=Array.isArray(b)?b:iterables.iterable(b).toArray(),this.statistics=new k,this.events=new l({events:["begin","beforeMatch","afterMatch","end"]})},account:function(a){var b=this.game,c=a.result(),d=this.statistics;e(!c,"Match doesn't have results. Has it finished?"),g(a.players).forEach(function(e){{var f=e[0],g=e[1],h=c[e[0]];["game:"+b.name,"role:"+f,"player:"+g.name]}d.add({key:"results",game:b.name,role:f,player:g.name},h),d.add({key:h>0?"victories":0>h?"defeats":"draws",game:b.name,role:f,player:g.name},h),d.add({key:"length",game:b.name,role:f,player:g.name},a.ply()),a.history.forEach(function(a){if("function"==typeof a.moves){var c=a.moves();c&&c.hasOwnProperty(f)&&c[f].length>0&&d.add({key:"width",game:b.name,role:f,player:g.name},c[f].length)}})})},run:function(a){this.onBegin();var b=this;return a=a||this.matches(),h.sequence(a,function(a){return b.beforeMatch(a),a.run().then(function(a){return b.account(a),b.afterMatch(a),b})}).then(this.onEnd.bind(this))},matches:function(){throw new Error("Tournament.matches is not implemented. Please override.")},onBegin:function(){this.events.emit("begin",this),this.logger&&this.logger.info("Tournament begins for game ",game.name,".")},beforeMatch:function(a){this.events.emit("beforeMatch",a,this),this.logger&&this.logger.debug("Beginning match with ",JSON.stringify(a.players),".")},afterMatch:function(a){this.events.emit("afterMatch",a,this),this.logger&&this.logger.debug("Finishing match with ",JSON.stringify(a.players),".")},onEnd:function(){this.events.emit("end",this.statistics,this),this.logger&&this.logger.info("Tournament ends for game ",game.name,":\n",this.statistics,"\n")}}),x=m.Aleatory=b({constructor:function(a,b){this.random=b||i.DEFAULT,"function"==typeof a&&(this.next=a)},next:function(){throw new Error((this.constructor.name||"Aleatory")+".next() not implemented! Please override.")},instantiate:function(){return this.next(this.value())},value:function A(){var A,a=random.random();if(g(this.distribution()).forEach(function(b){if(a-=b[1],0>=a)throw A=b[0],f.STOP_ITERATION}),"undefined"==typeof A)throw new Error("Random value could not be obtained.");return A},distribution:function(){throw new Error((this.constructor.name||"Aleatory")+".distribution() is not implemented! Please override.")}});o.RandomPlayer=b(u,{constructor:function(a,b){u.call(this,a),this.random=b||i.DEFAULT},toString:function(){return"RandomPlayer("+JSON.stringify(this.name)+")"},decision:function(a,b){return this.random.choice(this.__moves__(a,b))}}),o.TracePlayer=b(u,{constructor:function(a,b){u.call(this,a),this.trace=g(b),this.__iterator__=this.trace.__iter__(),this.__decision__=this.__iterator__()},toString:function(){return"TracePlayer("+JSON.stringify(this.name)+", ["+this.trace.join(", ")+"])"},decision:function(){try{this.__decision__=this.__iterator__()}catch(a){f.prototype.catchStop(a)}return this.__decision__}});var y=o.HeuristicPlayer=b(u,{constructor:function(a,b){u.call(this,a),j(this,b).object("random",{defaultValue:i.DEFAULT}).func("moveEvaluation",{ignore:!0}).func("stateEvaluation",{ignore:!0})},toString:function(){return"HeuristicPlayer("+JSON.stringify(this.name)+")"},moveEvaluation:function(a,b,d){return this.stateEvaluation(b.next(c(d,a)),d)},stateEvaluation:function(a,b){var c=a.result();return c?c[b]:this.random.random(-.5,.5)},selectMoves:function(a,b,c){var d=this;return h.all(a.map(function(a){return d.moveEvaluation(a,b,c)})).then(function(b){return g(a).zip(b).greater(function(a){return a[1]}).map(function(a){return a[0]})})},decision:function(a,b){var c=this;return h.when(c.selectMoves(c.__moves__(a,b),a,b)).then(function(a){return c.random.choice(a)})}});o.MiniMaxPlayer=b(y,{constructor:function(a,b){y.call(this,a,b),j(this,b).integer("horizon",{defaultValue:3,coerce:!0}).func("heuristic",{ignore:!0})},toString:function(){return"MiniMaxPlayer("+JSON.stringify(this.name)+", "+this.horizon+")"},stateEvaluation:function(a,b){var c=this.minimax(a,b,0,-1/0,1/0);return c},heuristic:function(){return this.random.random(-.5,.5)},minimax:function(a,b,d,e,f){var g=a.result();if(g)return g[b];if(d>=this.horizon)return this.heuristic(a,b);var h,i,j=a.activePlayer(),k=j==b,l=this.__moves__(a,j);if(l.length<1)throw new Error("No moves for unfinished game "+a+".");for(var m=0;m<l.length&&(i=a.next(c(j,l[m])),h=this.minimax(i,b,d+1,e,f),k?h>e&&(e=h):f>h&&(f=h),!(e>=f));m++);return k?e:f}}),o.MonteCarloPlayer=b(y,{constructor:function(a,b){y.call(this,a,b),j(this,b).integer("simulationCount",{defaultValue:30,coerce:!0}).integer("timeCap",{defaultValue:1e3,coerce:!0})},selectMoves:function(a,b,d){for(var e=this,f=Date.now()+this.timeCap,a=a.map(function(a){return{move:a,next:b.next(c(d,a)),sum:0,count:0}}),h=this.simulationCount;h>0&&Date.now()<f;--h)a.forEach(function(a){a.sum+=e.simulation(a.next,d),++a.count});return g(a).greater(function(a){return a.sum/a.count}).map(function(a){return a.move})},stateEvaluation:function(a,b){for(var c=0,d=this.simulationCount;d>0;d--)c+=this.simulation(a,b);return c/this.simulationCount},simulation:function(a,b){for(var c,d,e=this;;)if(a instanceof x)a=a.instantiate();else{if(d=a.moves(),!d)break;c={},a.activePlayers.forEach(function(a){c[a]=e.random.choice(d[a])}),a=a.next(c)}return a.result()[b]}});var z=(o.UserInterfacePlayer=b(u,{constructor:function(a){u.call(this,a)},decision:function(){if(this.__future__&&this.__future__.isPending()){var a=new Error("Last decision has not been made. Match probably aborted.");this.__future__.reject(a)}return this.__future__=new h},perform:function(a){var b=this.__future__;return b&&(this.__future__=null,b.resolve(a)),!!b}}),o.UserInterface=b({constructor:function(a,b){this.match=a,j(this,b).array("players",{defaultValue:a.state().players}),a.events.on("begin",this.onBegin.bind(this)),a.events.on("move",this.onMove.bind(this)),a.events.on("end",this.onEnd.bind(this))},onBegin:function(a,b){this.activePlayer=b.activePlayer(),this.display(b)},onMove:function(a,b,c){this.activePlayer=c.activePlayer(),this.display(c)},onEnd:function(a,b){this.activePlayer=null,this.results=a,this.display(b)},display:function(){throw new Error("UserInterface.display is not defined. Please override.")},perform:function(a,b){if(b=b||this.match.state().activePlayer(),this.players.indexOf(b)>=0){var c=this.match.players[b];c&&"function"==typeof c.perform&&c.perform(a)}}}));return z.BasicHTMLInterface=b(z,{constructor:function(a,b){m.UserInterface.call(this,a,b),this.domElement=b.domElement,"string"==typeof this.domElement&&(this.domElement=document.getElementById(this.domElement))},display:function(a){domElement.innerHTML=a.toHTML()}}),z.KineticJSInterface=b(z,{constructor:function(a,b){m.UserInterface.call(this,a,b),j(this,b).object("container").object("Kinetic",{defaultValue:window.Kinetic}),this.container.destroyChildren()}}),n.__Predefined__=b(t,{constructor:function(a,b,c,d){b&&(this.__results__=b,this.players=Object.keys(b)),t.call(this,a),this.height=isNaN(c)?5:+c,this.width=isNaN(d)?5:+d},name:"__Predefined__",players:["A","B"],__results__:{A:0,B:0},moves:function(){return this.height>0?c(this.activePlayer(),f.range(1,this.width+1).toArray()):void 0},result:function(){return this.height>0?null:this.__results__},next:function(){return new this.constructor(this.opponent(),this.__results__,this.height-1,this.width)},args:function(){return[this.name,this.activePlayer(),this.results,this.height,this.width]},toString:function(){return"__Predefined__("+[this.activePlayer(),this.__results__,this.height,this.width].map(JSON.stringify).join(", ")+")"}}),n.Choose2Win=b(t,{constructor:function(a,b,c){t.call(this,b),this.__turns__=isNaN(a)?1/0:+a,this.__winner__=c},name:"Choose2Win",players:["This","That"],moves:function(){return!this.__winner__&&this.__turns__>0?c(this.activePlayer(),["win","lose","pass"]):void 0},result:function(){return this.__winner__?this.victory(this.__winner__):this.__turns__<1?this.draw():null},next:function(a){var b=this.activePlayer(),c=this.opponent(b);switch(a[b]){case"win":return new this.constructor(this.__turns__-1,c,b);case"lose":return new this.constructor(this.__turns__-1,c,c);case"pass":return new this.constructor(this.__turns__-1,c)}throw new Error("Invalid move "+a[b]+" for player "+b+".")},args:function(){return[this.name,this.__turns__,this.activePlayer(),this.__winner__]},toString:function(){return"Choose2Win("+this.__turns__+","+JSON.stringify(this.activePlayer())+","+JSON.stringify(this.__winner__)+")"}}),n.OddsAndEvens=b(t,{constructor:function(a,b){t.call(this,this.players),this.turns=isNaN(a)?1:+a,this.points=b||{Evens:0,Odds:0}},name:"OddsAndEvens",players:["Evens","Odds"],moves:function(){return this.turns<1?null:{Evens:[1,2],Odds:[1,2]}},result:function(){var a=this.points.Evens-this.points.Odds;return this.turns>0?null:{Evens:+a,Odds:-a}},next:function(a){var b=!((a.Evens+a.Odds)%2);return new this.constructor(this.turns-1,{Evens:this.points.Evens+(b?1:0),Odds:this.points.Odds+(b?0:1)})},args:function(){return[this.name,this.turns,this.points]},toString:function(){return JSON.stringify(this.points)}}),n.TicTacToe=b(t,{constructor:function(a,b){t.call(this,a),this.board=b||"_________"},name:"TicTacToe",players:["Xs","Os"],result:function(){var a=/XXX......|...XXX...|......XXX|X..X..X..|.X..X..X.|..X..X..X|X...X...X|..X.X.X../,b=/OOO......|...OOO...|......OOO|O..O..O..|.O..O..O.|..O..O..O|O...O...O|..O.O.O../;return function(){return this.board.match(a)?this.victory(["Xs"]):this.board.match(b)?this.victory(["Os"]):this.board.indexOf("_")<0?this.draw():null}}(),moves:function(){if(this.result())return null;var a={};return a[this.activePlayer()]=g(this.board).filter(function(a){return"_"===a},function(a,b){return b}).toArray(),a},next:function(a){var b=this.activePlayer(),c=+a[b];if("_"!==this.board.charAt(c))throw new Error("Invalid move "+JSON.stringify(a)+" for board "+this.board+" (moves= "+JSON.stringify(a)+").");var d=this.board.substring(0,c)+b.charAt(0)+this.board.substring(c+1);return new this.constructor(this.opponent(b),d)},args:function(){return[this.name,this.activePlayer(),this.board]},toString:function(){return[this.board.substring(0,2).split("").join("|"),"-+-+-",board.substring(3,5).split("").join("|"),"-+-+-",board.substring(6,8).split("").join("|")].join("\n")}}),n.TicTacToe.heuristics={},n.TicTacToe.heuristics.heuristicFromWeights=function(a){function b(b,d){var e=d.charAt(0);return g(b.board).map(function(b,c){return"_"===b?0:a[c]*(b===e?1:-1)}).sum()/c}var c=g(a).map(Math.abs).sum();return b.weights=a,b},n.TicTacToe.heuristics.defaultHeuristic=n.TicTacToe.heuristics.heuristicFromWeights([2,1,2,1,5,1,2,1,2]),n.ToadsAndFrogs=b(t,{constructor:function B(a,b){t.call(this,a),this.board=b||B.board()},name:"ToadsAndFrogs",players:["Toads","Frogs"],results:function(){return this.moves()?null:this.defeat()},moves:function(){var a=this.activePlayer(),b={},c=b[a]=[];return this.board.replace(a==this.players[0]?/TF?_/g:/_T?F/g,function(a,b){return c.push(b),a}),c.length>0?b:null},next:function(a){var b=this.activePlayer(),c=a[b],d=(b.charAt(0),this.board);if("T_"==d.substr(c,2))d=d.substring(0,c)+"_T"+d.substring(c+2);else if("_F"==d.substr(c,2))d=d.substring(0,c)+"F_"+d.substring(c+2);else if("TF_"==d.substr(c,3))d=d.substring(0,c)+"_FT"+d.substring(c+3);else{if("_TF"!=d.substr(c,3))throw new Error("Invalid move ",c," for board <",d,">.");d=d.substring(0,c)+"FT_"+d.substring(c+3)}return new this.constructor(this.opponent(b),d)},args:function(){return[this.name,this.activePlayer,this.board]},toString:function(){return this.board}}),n.ToadsAndFrogs.board=function(a,b){return a=isNaN(a)?3:+a,b=isNaN(b)?2:+b,"T".repeat(a)+"_".repeat(b)+"F".repeat(a)},n.Mancala=b(t,{constructor:function(a,b){t.call(this,a),this.board=b||this.makeBoard()},makeBoard:function(a,b){a=isNaN(a)?3:+a,b=isNaN(b)?6:+b;for(var c=[],d=0;2>d;d++){for(var e=0;b>e;e++)c.push(a);c.push(0)}return c},name:"Mancala",players:["North","South"],emptyCapture:!1,countRemainingSeeds:!0,store:function(a){switch(this.players.indexOf(a)){case 0:return this.board.length/2-1;case 1:return this.board.length-1;default:throw new Error("Invalid player "+a+".")}},houses:function(a){switch(this.players.indexOf(a)){case 0:return f.range(0,this.board.length/2-1).toArray();case 1:return f.range(this.board.length/2,this.board.length-1).toArray();default:throw new Error("Invalid player "+a+".")}},oppositeHouse:function(a,b){var c=this.houses(a),d=this.houses(this.opponent(a)),e=c.indexOf(b);return 0>e?e:d.reverse()[e]},nextSquare:function(a,b){do b=(b+1)%this.board.length;while(b===this.store(this.opponent(a)));return b},moves:function(){var a=this.board,b={},c=this.activePlayer();return b[c]=this.houses(c).filter(function(b){return a[b]>0}),b[c].length>0?b:null},result:function C(){if(this.moves())return null;var C={},a=this,b=this.board;return this.players.forEach(function(c){C[c]=b[a.store(c)],a.countRemainingSeeds&&a.houses(c).forEach(function(a){C[c]+=b[a]})}),C[this.players[0]]-=C[this.players[1]],C[this.players[1]]=-C[this.players[0]],C},next:function(a){var b,c,d=this.activePlayer(),f=+a[d],g=this.board.slice(0),h=g[f],i=!1;for(e(1>h,"Invalid move ",f," for game ",this),g[f]=0;h>0;h--)f=this.nextSquare(d,f),g[f]++;return i=f==this.store(d),i||(c=this.oppositeHouse(d,f),c>=0&&1==g[f]&&g[c]>0&&(b=this.store(d),g[b]++,g[f]=0,this.emptyCapture||(g[b]+=g[c],g[c]=0))),new this.constructor(i?d:this.opponent(),g)},resultBounds:function(){var a=g(this.board).sum();return[-a,+a]},args:function(){return[this.name,this.activePlayer(),this.board.slice()]},identifier:function(){return this.activePlayer().charAt(0)+this.board.map(function(a){return("00"+a.toString(36)).substr(-2)}).join("")},toString:function(){var a=this,b=this.players[0],c=this.houses(b).map(function(b){return(""+a.board[b]).lpad(2,"0")}).reverse(),d=(""+this.board[this.store(b)]).lpad(2,"0"),e=this.players[1],f=this.houses(e).map(function(b){return(""+a.board[b]).lpad(2,"0")}),g=(""+this.board[this.store(e)]).lpad(2,"0");return"   "+c.join(" | ")+"   \n"+d+" ".repeat(2*c.length+3*(c.length-1)+2)+g+"\n   "+f.join(" | ")+"   "}}),n.Mancala.makeBoard=n.Mancala.prototype.makeBoard,n.Mancala.heuristics={},n.Mancala.heuristics.heuristicFromWeights=function(a){function b(b,d){var e,f=0;switch(b.players.indexOf(d)){case 0:e=1;break;case 1:e=-1;break;default:throw new Error("Invalid player "+d+".")}return g(b.board).map(function(b,c){return f+=b,b*a[c]}).sum()/c/f*e}var c=g(a).map(Math.abs).sum();return b.weights=a,b},n.Mancala.heuristics.defaultHeuristic=n.Mancala.heuristics.heuristicFromWeights([1,1,1,1,1,1,5,-1,-1,-1,-1,-1,-1,-5]),n.Pig=b(t,{constructor:function(a,b,c,d){t.call(this,a),this.goal=isNaN(b)?100:+b,this.__scores__=c||g(this.players).zip([0,0]).toObject(),this.__rolls__=d||[]},name:"Pig",players:["One","Two"],moves:function(){if(!this.result()){var a=this.activePlayer(),b=this.__scores__[a]+g(this.__rolls__).sum();return c(a,b<this.goal?["roll","hold"]:["hold"])}},result:function(){var a=this.__scores__[this.players[0]],b=this.__scores__[this.players[1]];if(a>=this.goal||b>=this.goal){var c={};return c[this.players[0]]=a-b,c[this.players[1]]=-c[this.players[0]],c}},next:function(a){var b=this.activePlayer(),c=a[b];if("hold"===c){var e=d(this.__scores__);return e[b]+=g(this.__rolls__).sum(),new this.constructor(this.opponent(),this.goal,e,[])}if("roll"===c){var f=this;return new r.Dice(function(a){return a>1?new f.constructor(b,f.goal,f.__scores__,f.__rolls__.concat(a)):new f.constructor(f.opponent(),f.goal,f.__scores__,[])})}throw new Error("Invalid moves: "+JSON.stringify(a))},args:function(){return[this.name,this.activePlayer(),this.goal,this.__scores__,this.__rolls__]}}),q.RoundRobin=b(w,{constructor:function(a,b,c){w.call(this,a,b),this.matchCount=isNaN(c)?a.players.length:+c},matches:function(){var a=this.game,b=g(this.players);return b=b.product.apply(b,f.repeat(this.players,a.players.length-1).toArray()),b.filter(function(a){for(var b=1;b<a.length;b++)for(var c=0;b>c;c++)if(a[b]===a[c])return!1;return!0}).product(f.range(this.matchCount)).map(function(b){return new v(a,b[0])})}}),q.Measurement=b(w,{constructor:function(a,b,c,d){w.call(this,a,Array.isArray(b)?b:[b]),this.opponents=Array.isArray(c)?c:[c],e(this.opponents.length<a.players.length-1,"Not enough opponents."),this.matchCount=isNaN(d)?a.players.length:+d},matches:function(){var a=this.game,b=a.players.length,c=g(this.opponents);return c=b>2?c.product.apply(c,f.repeat(this.opponents,b-2).toArray()):c.map(function(a){return[a]}),g(this.players).product(f.range(b),c,f.range(this.matchCount)).map(function(b){var c=b[2].slice(0);return c.splice(b[1],0,b[0]),new v(a,c)})}}),r.Dice=b(x,{constructor:function(a,b,c){x.call(this,a,c),this.base=isNaN(b)?6:Math.max(2,+b)},value:function(){return this.random.randomInt(1,this.base+1)},distribution:function(){return this.__distribution__||(this.__distribution__=function(a){return f.range(1,a+1).map(function(b){return[b,1/a]}).toArray()}(this.base))}}),s.Checkerboard=b({constructor:function(a,b){isNaN(a)||(this.height=0|+a),isNaN(b)||(this.width=0|+b)},emptySquare:null,isValidCoord:function(a){return Array.isArray(a)&&!isNaN(a[0])&&!isNaN(a[1])&&a[0]>=0&&a[0]<this.height&&a[1]>=0&&a[1]<this.width},horizontals:function(){var a=this.width;return f.range(this.height).map(function(b){return f.range(a).map(function(a){return[b,a]})})},verticals:function(){var a=this.height;return f.range(this.width).map(function(b){return f.range(a).map(function(a){return[a,b]})})},orthogonals:function(){return this.horizontals().chain(this.verticals())},positiveDiagonals:function(){var a=this.width,b=this.height,c=b+a-1;return f.range(c).map(function(a){var d=Math.max(0,b-a-1),e=Math.max(0,a-b+1);return f.range(Math.min(a+1,c-a)).map(function(a){return[d+a,e+a]})})},negativeDiagonals:function(){var a=this.width,b=this.height,c=b+a-1;return f.range(c).map(function(a){var d=Math.min(a,b-1),e=Math.max(0,a-b+1);return f.range(Math.min(a+1,c-a)).map(function(a){return[d-a,e+a]})})},diagonals:function(){return this.positiveDiagonals().chain(this.negativeDiagonals())},lines:function(){return this.orthogonals().chain(this.diagonals())},square:function(){throw new Error("boards.Checkerboard.square() is not implemented. Please override.")},place:function(){throw new Error("boards.Checkerboard.place() is not implemented. Please override.")},move:function(a,b,c){return this.place(b,this.square(a[0],a[1])).place(a,"undefined"==typeof c?this.emptySquare:c)},swap:function(a,b){var c=this.square(b[0],b[1]);return this.place(b,this.square(a[0],a[1])).place(a,c)}}),s.CheckerboardFromString=b(s.Checkerboard,{constructor:function(a,b,c,d){if(s.Checkerboard.call(this,a,b),d&&(this.emptySquare=(d+this.emptySquare).charAt(0)),c&&c.length!==a*b)throw new Error("Given string "+JSON.stringify(c)+" does not match board dimensions.");this.string=c||this.emptySquare.repeat(a*b)},emptySquare:".",square:function(a,b,c){return a>=0&&a<this.height&&b>=0&&b<this.width?this.string.charAt(a*this.width+b):c},place:function(a,b){e(!this.isValidCoord(a),"Invalid coordinate ",a,"."),b=(b+this.emptySquare).charAt(0);var c=a[0]*this.width+a[1],d=this.string.substr(0,c)+b+this.string.substr(c+1);return new this.constructor(this.height,this.width,d,this.emptySquare)},toString:function(){var a=this.string,b=this.height,c=this.width;return f.range(b).map(function(d){return a.substr((b-d-1)*c,c)}).join("\n")}}),m.utils.Scanner=b({constructor:function(a){j(this,a).object("game",{ignore:!0}).integer("maxWidth",{defaultValue:1e3,coerce:!0}).integer("maxLength",{defaultValue:50,coerce:!0}).object("random",{defaultValue:i.DEFAULT}).object("statistics",{defaultValue:new k})},scan:function(a){var b=this,c=arguments.length<2?this.game?[this.game]:[]:Array.prototype.slice.call(arguments,1),d=0;return h.whileDo(function(){return c.length>0&&d<b.maxLength},function(){return h.all(c.map(function(c){return b.__advance__(a,c,d)})).then(function(a){c=g(a).flatten().sample(b.maxWidth,b.random).toArray(),d++})}).then(function(){return b.statistics.add({key:"aborted"},c.length),b.statistics})},__advance__:function(a,b,c){if(b instanceof x)return g(b.distribution()).map(function(a){return b.next(a[0])});if(this.account(a,b,c))return f.EMPTY;var d=b.moves();return h.all(b.activePlayers.map(function(c){if(a&&a[c]){var e=stats.stat({key:"decision.time",game:b.name,role:role,player:p});return e.startTime(),h.when(a[c].decision(b,c)).then(function(a){return e.addTime(),[a]})}return d[c]})).then(function(a){return f.product.apply(this,a).map(function(a){return b.next(g(b.activePlayers).zip(a).toObject())})})},account:function(a,b,c){var d=b.result(),e=this.statistics;if(d)return g(b.players).forEach(function(f){{var g=d[f],h=a&&a[f]?a[f].name:"";["game:"+b.name,"role:"+f,"player:"+h]}e.add({key:"game.result",game:b.name,role:f,player:h},g,b),e.add({key:"game.length",game:b.name,role:f,player:h},c,b),0>g?(e.add({key:"defeat.result",game:b.name,role:f,player:h},g,b),e.add({key:"defeat.length",game:b.name,role:f,player:h},c,b)):g>0?(e.add({key:"victory.result",game:b.name,role:f,player:h},g,b),e.add({key:"victory.result",game:b.name,role:f,player:h},c,b)):e.add({key:"draw.length",game:b.name,role:f,player:h},c,b)}),!0;var f=b.moves();return g(b.activePlayers).forEach(function(a){e.add({key:"game.width",game:b.name,role:a},f[a].length)}),!1},assessPlayer:function(a,b){b=b||this.game;var c=this;return h.sequence(b.players,function(d){var e={};return e[d]=a,c.scan(e,b)}).then(function(c){var d=b.resultBounds(),e=c.average({key:"game.result",game:b.name,players:a.name});return c.add({key:"player.expectedResult",game:b.name,players:a.name},e),c.add({key:"player.expectedResultNormalized",game:b.name,players:a.name},(e-d[0])/(d[1]-d[0])*2-1),c.add({key:"player.expectedOutcome",game:b.name,players:a.name},(c.count({key:"victory.result",game:b.name,players:a.name})-c.count({key:"defeat.result",game:b.name,players:a.name}))/c.count({key:"game.result",game:b.name,players:a.name})),c})},assessGame:function(a,b,c){a=a||this.game;return this.scan({},a).then(function(d){var e=d.stat({key:"fairness",game:a.name}),f=d.stat({key:"competitiveness",game:a.name}),g=d.stat({key:"duration",game:a.name}),h=d.stat({key:"breath",game:a.name});return a.players.forEach(function(i){{var j=a.resultBounds();["game:"+a.name,"role:"+i]}e.add(1-Math.abs((d.average({key:"game.result",game:a.name,role:i})-j[0])/(j[1]-j[0])*2-1)),f.add(1-d.count({key:"draw.length",game:a.name,role:i})/d.count({key:"game.length",game:a.name,role:i})),g.add(1/(1+d.standardDeviation({key:"game.length",game:a.name,role:i},b)/(d.maximum({key:"game.length",game:a.name,role:i})-d.minimum({key:"game.length",game:a.name,role:i})))),h.add(1/(1+d.standardDeviation({key:"game.width",game:a.name,role:i},c)/(d.maximum({key:"game.length",game:a.name,role:i})-d.minimum({key:"game.length",game:a.name,role:i}))))}),d})}}),m});