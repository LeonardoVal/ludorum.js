//! ludorum 0.1.0
!function(a){if("function"==typeof define&&define.amd)define(["basis"],a);else if("object"==typeof module&&module.exports)module.exports=a(require("basis"));else{var b=(0,eval)("this");b.ludorum=a(b.basis)}}(function(basis){"use strict";var declare=basis.declare,obj=basis.obj,copy=basis.copy,raiseIf=basis.raiseIf,Iterable=basis.Iterable,iterable=basis.iterable,Future=basis.Future,Randomness=basis.Randomness,initialize=basis.initialize,Statistics=basis.Statistics,Events=basis.Events,exports={},games=exports.games={},players=exports.players={},tournaments=exports.tournaments={},aleatories=exports.aleatories={},boards=exports.boards={},utils=exports.utils={},Game=exports.Game=declare({constructor:function(a){this.activePlayers=a?Array.isArray(a)?a:[a]:[this.players[0]]},name:"",players:[],moves:function(){for(var a={},b=0;b<this.activePlayers.length;b++)a[this.activePlayers[b]]=[];return a},next:function(){throw new Error((this.constructor.name||"Game")+".next() not implemented! Please override.")},result:function(){return this.moves()?null:this.defeat()},isActive:function(){for(var a=0;a<arguments.length;a++)if(this.activePlayers.indexOf(arguments[a])<0)return!1;return!0},activePlayer:function(){var a=this.activePlayers.length;return raiseIf(1>a,"There is no active player."),raiseIf(a>1,"More than one player is active."),this.activePlayers[0]},opponents:function(a){return a=a||this.activePlayers,iterable(this.players).filter(function(b){return a.indexOf(b)<0}).toArray()},opponent:function(a){var b=this.players.indexOf(a||this.activePlayer());return this.players[(b+1)%this.players.length]},doMove:function(a,b){b=b||this.activePlayer();var c={};return c[b]=a,this.next(c)},resultBounds:function(){return[-1,1]},zerosumResult:function(a,b){b=b?Array.isArray(b)?b:[b]:this.activePlayers,a=+a/(b.length||1);for(var c,d={},e=-a/(this.players.length-b.length||1),f=0;f<this.players.length;f++)c=this.players[f],d[c]=b.indexOf(c)<0?e:a;return d},victory:function(a,b){return this.zerosumResult(b||1,a)},defeat:function(a,b){return this.zerosumResult(b||-1,a)},draw:function(a,b){b=+(b||0),a=a||this.players;var c={};for(var d in a)c[a[d]]=b;return c},args:function(){throw new Error("Game.args() not implemented! Please override.")},clone:function(){var a=this.args();return a[0]=this.constructor,new(a[0].bind.apply(a[0],a))},identifier:function(){return JSON.stringify(this.args())},toString:function(){var a=this.args();return a.shift()+"("+a.map(JSON.stringify).join(",")+")"}});Game.serialized=function(){var a=this.prototype.moves,b=this.prototype.next;return declare(this,{moves:function c(){for(var b,d=this.__fixedMoves__||(this.__fixedMoves__={}),e=a.call(this),c={},f=0;f<this.activePlayers.length;f++)if(d.hasOwnProperty(this.activePlayers[f])){b=this.activePlayers[f];break}return b&&e?(c[b]=e[b],c):null},next:function(a){var c,d=copy({},this.fixedMoves||{},a),e=iterable(this.players).all(function(a){return d.hasOwnProperty(a)});return e?(c=b.call(this,d),c.fixedMoves={}):(c=this.clone(),c.fixedMoves=d),c}})},Game.cached=function(){{var a=this.prototype.moves,b=this.prototype.result;this.prototype.next}return declare(this,{moves:function(){var b=a.call(this);return this.moves=function(){return b},b},result:function c(){var c=b.call(this);return this.result=function(){return c},c}})};var Player=exports.Player=declare({constructor:function(){var a=0;return function(b){initialize(this,b).string("name",{defaultValue:"Player"+a++,coerce:!0})}}(),__moves__:function(a,b){var c=a.moves();return raiseIf(!c||!c[b]||c[b].length<1,"Player ",b," has no moves for game ",a,"."),c[b]},decision:function(a,b){return this.__moves__(a,b)[0]},participate:function(){return this},toString:function(){return(this.constructor.name||"Player")+"("+JSON.stringify({name:this.name})+")"},commandQuit:function(a){return{command:"quit",role:a}},commandReset:function(a,b){return{command:"reset",role:a,ply:isNaN(b)?0:+b}}}),Match=exports.Match=declare({constructor:function(a,b){this.game=a,this.players=Array.isArray(b)?iterable(a.players).zip(b).toObject():b,this.history=[a],this.events=new Events({events:["begin","move","next","end"]});for(var c in this.players)this.players[c]=this.players[c].participate(this,c)||this.players[c]},ply:function(){return this.history.length-1},toString:function(){return"Match("+this.game+", "+JSON.stringify(this.players)+")"},state:function(a){return a=isNaN(a)?this.ply():0>+a?this.ply()+ +a:+a,this.history[0|a]},result:function(){return this.state().result()},decisions:function(a){a=a||this.state();var b=this.players;return Future.all(a.activePlayers.map(function(c){return Future.when(b[c].decision(a,c))}))},__advance__:function(a,b){return this.history.push(b),this.onNext(a,b),b},run:function(a){if(a=isNaN(a)?1/0:+a,1>a)return Future.when(this);var b,c=this.ply(),d=this.state();for(1>c&&this.onBegin(d);d instanceof Aleatory;)d=this.__advance__(d,d.instantiate());if(b=d.result())return this.onEnd(d,b),Future.when(this);var e=this;return this.decisions(d).then(function(b){return b=iterable(d.activePlayers).zip(b).toObject(),e.onMove(d,b),e.__advance__(d,d.next(b)),e.run(a-1)})},onBegin:function(a){this.events.emit("begin",a,this),this.logger&&this.logger.info("Match begins with ",iterable(this.players).map(function(a){return a[1]+" as "+a[0]}).join(", "),"; for ",a,".")},onMove:function(a,b){this.events.emit("move",a,b,this),this.logger&&this.logger.info("Players move: ",JSON.stringify(b)," in ",a)},onNext:function(a,b){this.events.emit("next",a,b,this),this.logger&&this.logger.info("Match advances from ",a," to ",b)},onEnd:function(a,b){this.events.emit("end",a,b,this),this.logger&&this.logger.info("Match for ",a,"ends with ",JSON.stringify(b))}}),Tournament=exports.Tournament=declare({constructor:function(a,b){this.game=a,this.players=Array.isArray(b)?b:iterables.iterable(b).toArray(),this.statistics=new Statistics,this.events=new Events({events:["begin","beforeMatch","afterMatch","end"]})},account:function(a){var b=this.game,c=a.result(),d=this.statistics;raiseIf(!c,"Match doesn't have results. Has it finished?"),iterable(a.players).forEach(function(e){{var f=e[0],g=e[1],h=c[e[0]];["game:"+b.name,"role:"+f,"player:"+g.name]}d.add({key:"results",game:b.name,role:f,player:g.name},h),d.add({key:h>0?"victories":0>h?"defeats":"draws",game:b.name,role:f,player:g.name},h),d.add({key:"length",game:b.name,role:f,player:g.name},a.ply()),a.history.forEach(function(a){if("function"==typeof a.moves){var c=a.moves();c&&c.hasOwnProperty(f)&&c[f].length>0&&d.add({key:"width",game:b.name,role:f,player:g.name},c[f].length)}})})},run:function(a){this.onBegin();var b=this;return a=a||this.matches(),Future.sequence(a,function(a){return b.beforeMatch(a),a.run().then(function(a){return b.account(a),b.afterMatch(a),b})}).then(this.onEnd.bind(this))},matches:function(){throw new Error("Tournament.matches is not implemented. Please override.")},onBegin:function(){this.events.emit("begin",this),this.logger&&this.logger.info("Tournament begins for game ",game.name,".")},beforeMatch:function(a){this.events.emit("beforeMatch",a,this),this.logger&&this.logger.debug("Beginning match with ",JSON.stringify(a.players),".")},afterMatch:function(a){this.events.emit("afterMatch",a,this),this.logger&&this.logger.debug("Finishing match with ",JSON.stringify(a.players),".")},onEnd:function(){this.events.emit("end",this.statistics,this),this.logger&&this.logger.info("Tournament ends for game ",game.name,":\n",this.statistics,"\n")}}),Aleatory=exports.Aleatory=declare({constructor:function(a,b){this.random=b||Randomness.DEFAULT,"function"==typeof a&&(this.next=a)},next:function(){throw new Error((this.constructor.name||"Aleatory")+".next() not implemented! Please override.")},instantiate:function(){return this.next(this.value())},value:function a(){var a,b=random.random();if(iterable(this.distribution()).forEach(function(c){if(b-=c[1],0>=b)throw a=c[0],Iterable.STOP_ITERATION}),"undefined"==typeof a)throw new Error("Random value could not be obtained.");return a},distribution:function(){throw new Error((this.constructor.name||"Aleatory")+".distribution() is not implemented! Please override.")}});players.RandomPlayer=declare(Player,{constructor:function(a){Player.call(this,a),initialize(this,a).object("random",{defaultValue:Randomness.DEFAULT})},decision:function(a,b){return this.random.choice(this.__moves__(a,b))}}),players.TracePlayer=declare(Player,{constructor:function(a){Player.call(this,a),this.trace=iterable(a.trace),this.__iterator__=this.trace.__iter__(),this.__decision__=this.__iterator__()},toString:function(){return(this.constructor.name||"Player")+"("+JSON.stringify({name:this.name,trace:this.trace.toArray()})+")"},decision:function(){try{this.__decision__=this.__iterator__()}catch(a){Iterable.prototype.catchStop(a)}return this.__decision__}});var HeuristicPlayer=players.HeuristicPlayer=declare(Player,{constructor:function(a){Player.call(this,a),initialize(this,a).object("random",{defaultValue:Randomness.DEFAULT}).func("moveEvaluation",{ignore:!0}).func("stateEvaluation",{ignore:!0})},moveEvaluation:function(a,b,c){return this.stateEvaluation(b.next(obj(c,a)),c)},stateEvaluation:function(a,b){var c=a.result();return c?c[b]:this.random.random(-.5,.5)},selectMoves:function(a,b,c){var d=this;return Future.all(a.map(function(a){return d.moveEvaluation(a,b,c)})).then(function(b){return iterable(a).zip(b).greater(function(a){return a[1]}).map(function(a){return a[0]})})},decision:function(a,b){var c=this;return Future.when(c.selectMoves(c.__moves__(a,b),a,b)).then(function(a){return c.random.choice(a)})}}),MiniMaxPlayer=players.MiniMaxPlayer=declare(HeuristicPlayer,{constructor:function(a){HeuristicPlayer.call(this,a),initialize(this,a).integer("horizon",{defaultValue:3,coerce:!0}).func("heuristic",{ignore:!0})},stateEvaluation:function(a,b){return this.minimax(a,b,0)},heuristic:function(){return this.random.random(-.5,.5)},quiescence:function(a,b,c){var d=a.result();return d?d[b]:c>=this.horizon?this.heuristic(a,b):0/0},minimax:function(a,b,c){var d=this.quiescence(a,b,c);if(isNaN(d)){var e,f,g=a.activePlayer(),h=this.__moves__(a,g);if(h.length<1)throw new Error("No moves for unfinished game "+a+".");g==b?(d=-1/0,e=Math.max):(d=+1/0,e=Math.min);for(var i=0;i<h.length;++i)f=a.next(obj(g,h[i])),d=e(d,this.minimax(f,b,c+1))}return d},toString:function(){return(this.constructor.name||"MiniMaxPlayer")+"("+JSON.stringify({name:this.name,horizon:this.horizon})+")"}});players.AlphaBetaPlayer=declare(MiniMaxPlayer,{constructor:function(a){MiniMaxPlayer.call(this,a)},stateEvaluation:function(a,b){return this.minimax(a,b,0,-1/0,1/0)},minimax:function(a,b,c,d,e){var f=this.quiescence(a,b,c);if(!isNaN(f))return f;var g,h=a.activePlayer(),i=h==b,j=this.__moves__(a,h);if(j.length<1)throw new Error("No moves for unfinished game "+a+".");for(var k=0;k<j.length&&(g=a.next(obj(h,j[k])),f=this.minimax(g,b,c+1,d,e),i?f>d&&(d=f):e>f&&(e=f),!(d>=e));k++);return i?d:e}}),players.MonteCarloPlayer=declare(HeuristicPlayer,{constructor:function(a){HeuristicPlayer.call(this,a),initialize(this,a).number("simulationCount",{defaultValue:30,coerce:!0}).number("timeCap",{defaultValue:1e3,coerce:!0})},selectMoves:function(a,b,c){for(var d=this,e=Date.now()+this.timeCap,a=a.map(function(a){return{move:a,next:b.next(obj(c,a)),sum:0,count:0}}),f=this.simulationCount;f>0&&Date.now()<e;--f)a.forEach(function(a){a.sum+=d.simulation(a.next,c),++a.count});return iterable(a).greater(function(a){return a.sum/a.count}).map(function(a){return a.move})},stateEvaluation:function(a,b){for(var c=0,d=this.simulationCount;d>0;d--)c+=this.simulation(a,b);return c/this.simulationCount},simulation:function(a,b){for(var c,d,e=this;;)if(a instanceof Aleatory)a=a.instantiate();else{if(d=a.moves(),!d)break;c={},a.activePlayers.forEach(function(a){return c[a]=e.random.choice(d[a])}),a=a.next(c)}return a.result()[b]},toString:function(){return(this.constructor.name||"MonteCarloPlayer")+"("+JSON.stringify({name:this.name,simulationCount:this.simulationCount,timeCap:this.timeCap})+")"}});var UserInterfacePlayer=players.UserInterfacePlayer=declare(Player,{constructor:function(a){Player.call(this,a)},decision:function(){if(this.__future__&&this.__future__.isPending()){var a=new Error("Last decision has not been made. Match probably aborted.");this.__future__.reject(a)}return this.__future__=new Future},perform:function(a){var b=this.__future__;return b&&(this.__future__=null,b.resolve(a)),!!b}}),UserInterface=players.UserInterface=declare({constructor:function(a){this.onBegin=this.onBegin.bind(this),this.onNext=this.onNext.bind(this),this.onEnd=this.onEnd.bind(this),a.match&&this.show(a.match)},show:function(a){this.match&&(a.events.off("begin",this.onBegin),a.events.off("next",this.onNext),a.events.off("end",this.onEnd)),this.match=a,a.events.on("begin",this.onBegin),a.events.on("next",this.onNext),a.events.on("end",this.onEnd)},onBegin:function(a){this.activePlayer=a.activePlayer(),this.display(a)},onNext:function(a,b){this.activePlayer=b.activePlayer(),this.display(b)},onEnd:function(a,b){this.activePlayer=null,this.results=b,this.display(a)},display:function(){throw new Error("UserInterface.display is not defined. Please override.")},perform:function(a,b){b=b||this.match.state().activePlayer();var c=this.match.players[b];c instanceof UserInterfacePlayer&&c.perform(a)}});return UserInterface.BasicHTMLInterface=declare(UserInterface,{constructor:function(a){UserInterface.call(this,a),this.container=a.container,"string"==typeof this.container&&(this.container=document.getElementById(this.container))},display:function display(game){var ui=this,container=this.container;container.innerHTML=game.toHTML(),Array.prototype.slice.call(container.querySelectorAll("[data-ludorum]")).forEach(function(elem){var data=eval("({"+elem.getAttribute("data-ludorum")+"})");data.hasOwnProperty("move")&&(elem.onclick=ui.perform.bind(ui,data.move,data.activePlayer))})}}),games.__Predefined__=declare(Game,{constructor:function(a,b,c,d){b&&(this.__results__=b,this.players=Object.keys(b)),Game.call(this,a),this.height=isNaN(c)?5:+c,this.width=isNaN(d)?5:+d},name:"__Predefined__",players:["A","B"],__results__:{A:0,B:0},moves:function(){return this.height>0?obj(this.activePlayer(),Iterable.range(1,this.width+1).toArray()):void 0},result:function(){return this.height>0?null:this.__results__},next:function(){return new this.constructor(this.opponent(),this.__results__,this.height-1,this.width)},args:function(){return[this.name,this.activePlayer(),this.results,this.height,this.width]},toString:function(){return"__Predefined__("+[this.activePlayer(),this.__results__,this.height,this.width].map(JSON.stringify).join(", ")+")"}}),games.Choose2Win=declare(Game,{constructor:function(a,b,c){Game.call(this,b),this.__turns__=isNaN(a)?1/0:+a,this.__winner__=c},name:"Choose2Win",players:["This","That"],moves:function(){return!this.__winner__&&this.__turns__>0?obj(this.activePlayer(),["win","lose","pass"]):void 0},result:function(){return this.__winner__?this.victory(this.__winner__):this.__turns__<1?this.draw():null},next:function(a){var b=this.activePlayer(),c=this.opponent(b);switch(a[b]){case"win":return new this.constructor(this.__turns__-1,c,b);case"lose":return new this.constructor(this.__turns__-1,c,c);case"pass":return new this.constructor(this.__turns__-1,c)}throw new Error("Invalid move "+a[b]+" for player "+b+".")},args:function(){return[this.name,this.__turns__,this.activePlayer(),this.__winner__]},toString:function(){return"Choose2Win("+this.__turns__+","+JSON.stringify(this.activePlayer())+","+JSON.stringify(this.__winner__)+")"}}),games.OddsAndEvens=declare(Game,{constructor:function(a,b){Game.call(this,this.players),this.turns=isNaN(a)?1:+a,this.points=b||{Evens:0,Odds:0}},name:"OddsAndEvens",players:["Evens","Odds"],moves:function(){return this.turns<1?null:{Evens:[1,2],Odds:[1,2]}},result:function(){var a=this.points.Evens-this.points.Odds;return this.turns>0?null:{Evens:+a,Odds:-a}},next:function(a){var b=!((a.Evens+a.Odds)%2);return new this.constructor(this.turns-1,{Evens:this.points.Evens+(b?1:0),Odds:this.points.Odds+(b?0:1)})},args:function(){return[this.name,this.turns,this.points]},toString:function(){return JSON.stringify(this.points)}}),games.TicTacToe=declare(Game,{constructor:function(a,b){Game.call(this,a),this.board=b||"_________"},name:"TicTacToe",players:["Xs","Os"],result:function(){var a=/XXX......|...XXX...|......XXX|X..X..X..|.X..X..X.|..X..X..X|X...X...X|..X.X.X../,b=/OOO......|...OOO...|......OOO|O..O..O..|.O..O..O.|..O..O..O|O...O...O|..O.O.O../;return function(){return this.board.match(a)?this.victory(["Xs"]):this.board.match(b)?this.victory(["Os"]):this.board.indexOf("_")<0?this.draw():null}}(),moves:function(){if(this.result())return null;var a={};return a[this.activePlayer()]=iterable(this.board).filter(function(a){return"_"===a},function(a,b){return b}).toArray(),a},next:function(a){var b=this.activePlayer(),c=+a[b];if("_"!==this.board.charAt(c))throw new Error("Invalid move "+JSON.stringify(a)+" for board "+this.board+" (moves= "+JSON.stringify(a)+").");var d=this.board.substring(0,c)+b.charAt(0)+this.board.substring(c+1);return new this.constructor(this.opponent(b),d)},args:function(){return[this.name,this.activePlayer(),this.board]},toString:function(){var a=this.board;return[a.substr(0,3).split("").join("|"),"-+-+-",a.substr(3,3).split("").join("|"),"-+-+-",a.substr(6,3).split("").join("|")].join("\n")},toHTML:function(){var a=this.activePlayer(),b=this.board.split("").map(function(b,c){return"_"===b?'<td data-ludorum="move: '+c+", activePlayer: '"+a+"'\">&nbsp;</td>":"<td>"+b+"</td>"});return"<table><tr>"+[b.slice(0,3).join(""),b.slice(3,6).join(""),b.slice(6,9).join("")].join("</tr><tr>")+"</tr></table>"}}),games.TicTacToe.heuristics={},games.TicTacToe.heuristics.heuristicFromWeights=function(a){function b(b,d){var e=d.charAt(0);return iterable(b.board).map(function(b,c){return"_"===b?0:a[c]*(b===e?1:-1)}).sum()/c}var c=iterable(a).map(Math.abs).sum();return b.weights=a,b},games.TicTacToe.heuristics.defaultHeuristic=games.TicTacToe.heuristics.heuristicFromWeights([2,1,2,1,5,1,2,1,2]),games.ToadsAndFrogs=declare(Game,{constructor:function b(a,c){Game.call(this,a),this.board=c||b.board()},name:"ToadsAndFrogs",players:["Toads","Frogs"],results:function(){return this.moves()?null:this.defeat()},moves:function(){var a=this.activePlayer(),b={},c=b[a]=[];return this.board.replace(a==this.players[0]?/TF?_/g:/_T?F/g,function(a,b){return c.push(b),a}),c.length>0?b:null},next:function(a){var b=this.activePlayer(),c=a[b],d=(b.charAt(0),this.board);if("T_"==d.substr(c,2))d=d.substring(0,c)+"_T"+d.substring(c+2);else if("_F"==d.substr(c,2))d=d.substring(0,c)+"F_"+d.substring(c+2);else if("TF_"==d.substr(c,3))d=d.substring(0,c)+"_FT"+d.substring(c+3);else{if("_TF"!=d.substr(c,3))throw new Error("Invalid move ",c," for board <",d,">.");d=d.substring(0,c)+"FT_"+d.substring(c+3)}return new this.constructor(this.opponent(b),d)},args:function(){return[this.name,this.activePlayer,this.board]},toString:function(){return this.board}}),games.ToadsAndFrogs.board=function(a,b){return a=isNaN(a)?3:+a,b=isNaN(b)?2:+b,"T".repeat(a)+"_".repeat(b)+"F".repeat(a)},games.Mancala=declare(Game,{constructor:function(a,b){Game.call(this,a),this.board=b||this.makeBoard()},makeBoard:function(a,b){a=isNaN(a)?3:+a,b=isNaN(b)?6:+b;for(var c=[],d=0;2>d;d++){for(var e=0;b>e;e++)c.push(a);c.push(0)}return c},name:"Mancala",players:["North","South"],emptyCapture:!1,countRemainingSeeds:!0,store:function(a){switch(this.players.indexOf(a)){case 0:return this.board.length/2-1;case 1:return this.board.length-1;default:throw new Error("Invalid player "+a+".")}},houses:function(a){switch(this.players.indexOf(a)){case 0:return Iterable.range(0,this.board.length/2-1).toArray();case 1:return Iterable.range(this.board.length/2,this.board.length-1).toArray();default:throw new Error("Invalid player "+a+".")}},oppositeHouse:function(a,b){var c=this.houses(a),d=this.houses(this.opponent(a)),e=c.indexOf(b);return 0>e?e:d.reverse()[e]},nextSquare:function(a,b){do b=(b+1)%this.board.length;while(b===this.store(this.opponent(a)));return b},moves:function(){if(this.result())return null;var a=this.board,b={},c=this.activePlayer();return b[c]=this.houses(c).filter(function(b){return a[b]>0}),b[c].length>0?b:null},result:function c(){var a=this,b=this.board,d=this.players.map(function(c){return iterable(a.houses(c)).map(function(a){return b[a]}).sum()});if(d[0]&&d[1])return null;var c={};return this.players.forEach(function(e,f){c[e]=b[a.store(e)]+a.countRemainingSeeds*d[f]}),c[this.players[0]]-=c[this.players[1]],c[this.players[1]]=-c[this.players[0]],c},next:function(a){var b,c,d=this.activePlayer(),e=+a[d],f=this.board.slice(0),g=f[e],h=!1;for(raiseIf(1>g,"Invalid move ",e," for game ",this),f[e]=0;g>0;g--)e=this.nextSquare(d,e),f[e]++;return h=e==this.store(d),h||(c=this.oppositeHouse(d,e),c>=0&&1==f[e]&&f[c]>0&&(b=this.store(d),f[b]++,f[e]=0,this.emptyCapture||(f[b]+=f[c],f[c]=0))),new this.constructor(h?d:this.opponent(),f)},resultBounds:function(){var a=iterable(this.board).sum();return[-a,+a]},args:function(){return[this.name,this.activePlayer(),this.board.slice()]},identifier:function(){return this.activePlayer().charAt(0)+this.board.map(function(a){return("00"+a.toString(36)).substr(-2)}).join("")},toString:function(){var a=this,b=basis.Text.lpad,c=this.players[0],d=this.houses(c).map(function(c){return b(""+a.board[c],2,"0")}).reverse(),e=b(""+this.board[this.store(c)],2,"0"),f=this.players[1],g=this.houses(f).map(function(c){return b(""+a.board[c],2,"0")}),h=b(""+this.board[this.store(f)],2,"0");return"   "+d.join(" | ")+"   \n"+e+" ".repeat(2*d.length+3*(d.length-1)+2)+h+"\n   "+g.join(" | ")+"   "},toHTML:function(){function a(a,c){return!b||!b[a]||!b[a].indexOf(c)<0?"<td>"+this.board[c]+"</td>":'<td data-ludorum="move:'+c+", activePlayer: '"+a+"'\">"+this.board[c]+"</td>"}var b=this.moves(),c=this.players[0],d=this.players[1];return'<table><tr><td rowspan="2">'+this.board[this.store(c)]+"</td>"+this.houses(c).map(a.bind(this,c)).reverse().join("")+'<td rowspan="2">'+this.board[this.store(d)]+"</td></tr><tr>"+this.houses(d).map(a.bind(this,d)).join("")+"</tr></table>"}}),games.Mancala.makeBoard=games.Mancala.prototype.makeBoard,games.Mancala.heuristics={},games.Mancala.heuristics.heuristicFromWeights=function(a){function b(b,d){var e,f=0;switch(b.players.indexOf(d)){case 0:e=1;break;case 1:e=-1;break;default:throw new Error("Invalid player "+d+".")}return iterable(b.board).map(function(b,c){return f+=b,b*a[c]}).sum()/c/f*e}var c=iterable(a).map(Math.abs).sum();return b.weights=a,b},games.Mancala.heuristics.defaultHeuristic=games.Mancala.heuristics.heuristicFromWeights([1,1,1,1,1,1,5,-1,-1,-1,-1,-1,-1,-5]),games.Pig=declare(Game,{constructor:function(a,b,c,d){Game.call(this,a),this.goal=isNaN(b)?100:+b,this.__scores__=c||iterable(this.players).zip([0,0]).toObject(),this.__rolls__=d||[]},name:"Pig",players:["One","Two"],moves:function(){if(!this.result()){var a=this.activePlayer(),b=this.__scores__[a]+iterable(this.__rolls__).sum();return obj(a,b<this.goal?["roll","hold"]:["hold"])}},result:function(){var a=this.__scores__[this.players[0]],b=this.__scores__[this.players[1]];if(a>=this.goal||b>=this.goal){var c={};return c[this.players[0]]=a-b,c[this.players[1]]=-c[this.players[0]],c}},next:function(a){var b=this.activePlayer(),c=a[b];if("hold"===c){var d=copy(this.__scores__);return d[b]+=iterable(this.__rolls__).sum(),new this.constructor(this.opponent(),this.goal,d,[])}if("roll"===c){var e=this;return new aleatories.Dice(function(a){return a>1?new e.constructor(b,e.goal,e.__scores__,e.__rolls__.concat(a)):new e.constructor(e.opponent(),e.goal,e.__scores__,[])})}throw new Error("Invalid moves: "+JSON.stringify(a))},args:function(){return[this.name,this.activePlayer(),this.goal,this.__scores__,this.__rolls__]}}),tournaments.RoundRobin=declare(Tournament,{constructor:function(a,b,c){Tournament.call(this,a,b),this.matchCount=isNaN(c)?a.players.length:+c},matches:function(){var a=this.game,b=iterable(this.players);return b=b.product.apply(b,Iterable.repeat(this.players,a.players.length-1).toArray()),b.filter(function(a){for(var b=1;b<a.length;b++)for(var c=0;b>c;c++)if(a[b]===a[c])return!1;return!0}).product(Iterable.range(this.matchCount)).map(function(b){return new Match(a,b[0])})}}),tournaments.Measurement=declare(Tournament,{constructor:function(a,b,c,d){Tournament.call(this,a,Array.isArray(b)?b:[b]),this.opponents=Array.isArray(c)?c:[c],raiseIf(this.opponents.length<a.players.length-1,"Not enough opponents."),this.matchCount=isNaN(d)?a.players.length:+d},matches:function(){var a=this.game,b=a.players.length,c=iterable(this.opponents);return c=b>2?c.product.apply(c,Iterable.repeat(this.opponents,b-2).toArray()):c.map(function(a){return[a]}),iterable(this.players).product(Iterable.range(b),c,Iterable.range(this.matchCount)).map(function(b){var c=b[2].slice(0);return c.splice(b[1],0,b[0]),new Match(a,c)})}}),aleatories.Dice=declare(Aleatory,{constructor:function(a,b,c){Aleatory.call(this,a,c),this.base=isNaN(b)?6:Math.max(2,+b)},value:function(){return this.random.randomInt(1,this.base+1)},distribution:function(){return this.__distribution__||(this.__distribution__=function(a){return Iterable.range(1,a+1).map(function(b){return[b,1/a]}).toArray()}(this.base))}}),boards.Checkerboard=declare({constructor:function(a,b){isNaN(a)||(this.height=0|+a),isNaN(b)||(this.width=0|+b)},emptySquare:null,isValidCoord:function(a){return Array.isArray(a)&&!isNaN(a[0])&&!isNaN(a[1])&&a[0]>=0&&a[0]<this.height&&a[1]>=0&&a[1]<this.width},horizontals:function(){var a=this.width;return Iterable.range(this.height).map(function(b){return Iterable.range(a).map(function(a){return[b,a]})})},verticals:function(){var a=this.height;return Iterable.range(this.width).map(function(b){return Iterable.range(a).map(function(a){return[a,b]})})},orthogonals:function(){return this.horizontals().chain(this.verticals())},positiveDiagonals:function(){var a=this.width,b=this.height,c=b+a-1;return Iterable.range(c).map(function(a){var d=Math.max(0,b-a-1),e=Math.max(0,a-b+1);return Iterable.range(Math.min(a+1,c-a)).map(function(a){return[d+a,e+a]})})},negativeDiagonals:function(){var a=this.width,b=this.height,c=b+a-1;return Iterable.range(c).map(function(a){var d=Math.min(a,b-1),e=Math.max(0,a-b+1);return Iterable.range(Math.min(a+1,c-a)).map(function(a){return[d-a,e+a]})})},diagonals:function(){return this.positiveDiagonals().chain(this.negativeDiagonals())},lines:function(){return this.orthogonals().chain(this.diagonals())},square:function(){throw new Error("boards.Checkerboard.square() is not implemented. Please override.")},place:function(){throw new Error("boards.Checkerboard.place() is not implemented. Please override.")},move:function(a,b,c){return this.place(b,this.square(a[0],a[1])).place(a,"undefined"==typeof c?this.emptySquare:c)},swap:function(a,b){var c=this.square(b[0],b[1]);return this.place(b,this.square(a[0],a[1])).place(a,c)}}),boards.CheckerboardFromString=declare(boards.Checkerboard,{constructor:function(a,b,c,d){if(boards.Checkerboard.call(this,a,b),d&&(this.emptySquare=(d+this.emptySquare).charAt(0)),c&&c.length!==a*b)throw new Error("Given string "+JSON.stringify(c)+" does not match board dimensions.");this.string=c||this.emptySquare.repeat(a*b)},emptySquare:".",square:function(a,b,c){return a>=0&&a<this.height&&b>=0&&b<this.width?this.string.charAt(a*this.width+b):c},place:function(a,b){raiseIf(!this.isValidCoord(a),"Invalid coordinate ",a,"."),b=(b+this.emptySquare).charAt(0);var c=a[0]*this.width+a[1],d=this.string.substr(0,c)+b+this.string.substr(c+1);return new this.constructor(this.height,this.width,d,this.emptySquare)},toString:function(){var a=this.string,b=this.height,c=this.width;return Iterable.range(b).map(function(d){return a.substr((b-d-1)*c,c)}).join("\n")}}),exports.utils.Scanner=declare({constructor:function(a){initialize(this,a).object("game",{ignore:!0}).integer("maxWidth",{defaultValue:1e3,coerce:!0}).integer("maxLength",{defaultValue:50,coerce:!0}).object("random",{defaultValue:Randomness.DEFAULT}).object("statistics",{defaultValue:new Statistics})},scan:function(a){var b=this,c=arguments.length<2?this.game?[this.game]:[]:Array.prototype.slice.call(arguments,1),d=0;return Future.whileDo(function(){return c.length>0&&d<b.maxLength},function(){return Future.all(c.map(function(c){return b.__advance__(a,c,d)})).then(function(a){c=iterable(a).flatten().sample(b.maxWidth,b.random).toArray(),d++})}).then(function(){return b.statistics.add({key:"aborted"},c.length),b.statistics})},__advance__:function(a,b,c){if(b instanceof Aleatory)return iterable(b.distribution()).map(function(a){return b.next(a[0])});if(this.account(a,b,c))return Iterable.EMPTY;var d=b.moves();return Future.all(b.activePlayers.map(function(c){if(a&&a[c]){var e=stats.stat({key:"decision.time",game:b.name,role:role,player:p});return e.startTime(),Future.when(a[c].decision(b,c)).then(function(a){return e.addTime(),[a]})}return d[c]})).then(function(a){return Iterable.product.apply(this,a).map(function(a){return b.next(iterable(b.activePlayers).zip(a).toObject())})})},account:function(a,b,c){var d=b.result(),e=this.statistics;if(d)return iterable(b.players).forEach(function(f){{var g=d[f],h=a&&a[f]?a[f].name:"";["game:"+b.name,"role:"+f,"player:"+h]}e.add({key:"game.result",game:b.name,role:f,player:h},g,b),e.add({key:"game.length",game:b.name,role:f,player:h},c,b),0>g?(e.add({key:"defeat.result",game:b.name,role:f,player:h},g,b),e.add({key:"defeat.length",game:b.name,role:f,player:h},c,b)):g>0?(e.add({key:"victory.result",game:b.name,role:f,player:h},g,b),e.add({key:"victory.result",game:b.name,role:f,player:h},c,b)):e.add({key:"draw.length",game:b.name,role:f,player:h},c,b)}),!0;var f=b.moves();return iterable(b.activePlayers).forEach(function(a){e.add({key:"game.width",game:b.name,role:a},f[a].length)}),!1}}),exports});